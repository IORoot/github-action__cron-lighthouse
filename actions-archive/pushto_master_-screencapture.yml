# Ubuntu-latest versions
# mysql  Ver 8.0.23-0ubuntu0.20.04.1 for Linux on x86_64 ((Ubuntu))
# PHP 8.0.3 (cli) (built: Mar  5 2021 07:54:13) ( NTS )

# Interesting links:
# - https://github.com/PrestaShop/PrestaShop/tree/develop/.github/workflows
# - https://github.com/PrestaShop/PrestaShop/blob/develop/.github/workflows/sanity-74.yml
# - https://freek.dev/1590-how-to-use-a-mysql-database-on-github-actions

name: (TEST) -screencapture

on:
  push:
    branches:
      - master
  workflow_dispatch:


env:
  theme:  'wp-theme__londonparkour--v5'
  url:    'http://127.0.0.1'
  dest:   './screenshots'
  file:   './screenshots/screenshot.jpg'
  php:    '7.4'

jobs:

  screencapture:

    runs-on: ubuntu-18.04
    name: Screencapture
        # RUN IF -screencapture or -test in commit message
    if: "contains(github.event.head_commit.message, '-screencapture') || contains(github.event.head_commit.message, '-test')"

    steps:

      # Checkout repo with submodules
      # https://github.com/marketplace/actions/checkout-submodules 
      - uses: actions/checkout@v2
        with:
          submodules: recursive


      # Unlock with git-crypt.
      - name: Unlock secrets
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}


      # Start MySQL
      - name: Start mySQL
        run: |
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service


      # Install Database once decrypted with git-crypt and GPG key.
      # https://freek.dev/1590-how-to-use-a-mysql-database-on-github-actions
      - name: Install Database
        run: |
          mysql -uroot -proot -e "DROP DATABASE IF EXISTS dev_londonparkour_com"
          mysql -uroot -proot -e "CREATE DATABASE dev_londonparkour_com"
          mysql -uroot -proot dev_londonparkour_com < ./wp-content/database/dev_londonparkour_com.sql
          mysql -uroot -proot -e "CREATE USER 'ldnpk'@'localhost' IDENTIFIED BY '123abc';"
          mysql -uroot -proot -e "GRANT ALL on dev_londonparkour_com.* to 'ldnpk'@'localhost';"
          mysql -uroot -proot -e "FLUSH PRIVILEGES;"



      # Taken from: https://github.com/PrestaShop/PrestaShop/blob/develop/.github/workflows/sanity-74.yml
      - name: Setup Apache
        run: sudo bash .github/workflows/setup/setup-apache.sh ${{ github.workspace }} ${{ env.php }}


      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php }}
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml


      # Clone wordpress fresh install
      - name: Install Wordpress
        run: |
          curl -O https://wordpress.org/latest.tar.gz
          tar --strip-components=1 -xzvf latest.tar.gz
          rm latest.tar.gz


      # Install Composer Packages in wp-plugin__ and wp-theme__ folders
      - name: Composer Install
        run: |
          find . -path "*/wp-plugin*"  ! -path "*/vendor/*" ! -path "*/node_modules/*"  -name "composer.json"  -execdir composer install \;
          find . -path "./wp-content/themes/wp-theme*"  ! -path "*/vendor/*" ! -path "*/node_modules/*"  -name "composer.json"  -execdir composer install \;


      # # DEBUG with NGROK.
      # - name: Start SSH session
      #   uses: luchihoratiu/debug-via-ssh@main
      #   with:
      #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      #     SSH_PASS: ${{ secrets.NGROK_SSH_PASS }}
      #     NGROK_REGION: eu


      # Installing Node for tools
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x  


      # Install NPM Packages
      - name: NPM Install Theme
        run: |
          cd ./wp-content/themes/${{ env.theme }}
          npm install


      # CHOWN for apache
      - name: Ownership
        run: |
          sudo chown -Rf www-data:www-data ./


      # https://github.com/sindresorhus/capture-website-cli
      - name: Install capture-website-cli
        run: |
          npm install --global capture-website-cli 1> /dev/null


      # Take a screenshot
      - name: Screenshot Website
        run: |
          mkdir ${{ env.dest }}
          capture-website ${{ env.url }} --output ${{ env.file }} --full-page --type=jpeg --quality=0.5


      # Upload as github artifact
      - name: Upload screenshot
        uses: actions/upload-artifact@v2
        with:
          name: screenshot
          path: ${{ env.file }}
